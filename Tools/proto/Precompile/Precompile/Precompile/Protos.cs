//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from: proto_files/hexgame.proto
namespace Osblow.HexProto
{
    [global::System.Serializable, global::ProtoBuf.ProtoContract(Name = @"RoomBroadCast")]
    public partial class RoomBroadCast : global::ProtoBuf.IExtensible
    {
        public RoomBroadCast() { }

        private string _address;
        [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name = @"address", DataFormat = global::ProtoBuf.DataFormat.Default)]
        public string address
        {
            get { return _address; }
            set { _address = value; }
        }
        private int _port;
        [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name = @"port", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
        public int port
        {
            get { return _port; }
            set { _port = value; }
        }
        private Osblow.HexProto.RoomBroadCast.RoomConf _roomConf;
        [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name = @"roomConf", DataFormat = global::ProtoBuf.DataFormat.Default)]
        public Osblow.HexProto.RoomBroadCast.RoomConf roomConf
        {
            get { return _roomConf; }
            set { _roomConf = value; }
        }
        [global::System.Serializable, global::ProtoBuf.ProtoContract(Name = @"RoomConf")]
        public partial class RoomConf : global::ProtoBuf.IExtensible
        {
            public RoomConf() { }

            private string _name;
            [global::ProtoBuf.ProtoMember(1, IsRequired = true, Name = @"name", DataFormat = global::ProtoBuf.DataFormat.Default)]
            public string name
            {
                get { return _name; }
                set { _name = value; }
            }
            private int _maxMemCount;
            [global::ProtoBuf.ProtoMember(2, IsRequired = true, Name = @"maxMemCount", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
            public int maxMemCount
            {
                get { return _maxMemCount; }
                set { _maxMemCount = value; }
            }
            private bool _forceKill;
            [global::ProtoBuf.ProtoMember(3, IsRequired = true, Name = @"forceKill", DataFormat = global::ProtoBuf.DataFormat.Default)]
            public bool forceKill
            {
                get { return _forceKill; }
                set { _forceKill = value; }
            }
            private Osblow.HexProto.RoomBroadCast.RoomConf.MapType _mapType;
            [global::ProtoBuf.ProtoMember(4, IsRequired = true, Name = @"mapType", DataFormat = global::ProtoBuf.DataFormat.TwosComplement)]
            public Osblow.HexProto.RoomBroadCast.RoomConf.MapType mapType
            {
                get { return _mapType; }
                set { _mapType = value; }
            }
            [global::ProtoBuf.ProtoContract(Name = @"MapType")]
            public enum MapType
            {

                [global::ProtoBuf.ProtoEnum(Name = @"Small", Value = 0)]
                Small = 0,

                [global::ProtoBuf.ProtoEnum(Name = @"Middle", Value = 1)]
                Middle = 1,

                [global::ProtoBuf.ProtoEnum(Name = @"Big", Value = 2)]
                Big = 2
            }

            private global::ProtoBuf.IExtension extensionObject;
            global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
            { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
        }

        private global::ProtoBuf.IExtension extensionObject;
        global::ProtoBuf.IExtension global::ProtoBuf.IExtensible.GetExtensionObject(bool createIfMissing)
        { return global::ProtoBuf.Extensible.GetExtensionObject(ref extensionObject, createIfMissing); }
    }

}